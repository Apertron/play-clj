{"Align" {"align" :static-fields}
 "com.badlogic.gdx.graphics.g2d.Animation" {"play-mode" :static-fields
                                            "animation" :methods
                                            "animation!" :methods}
 "AnimationController" {"animation-controller" :methods
                        "animation-controller!" :methods}
 "Application" {"app!" :methods}
 "Array" {"gdx-array" :methods
          "gdx-array!" :methods}
 "ArrayMap" {"gdx-array-map" :methods
             "gdx-array-map!" :methods}
 "AssetManager" {"asset-manager" :methods
                 "asset-manager!" :methods}
 "AtlasTmxMapLoader" {"loader :atlas-tmx-map" :methods
                      "loader! :atlas-tmx-map" :methods}
 "Audio" {"audio!" :methods}
 "Bezier" {"bezier" :methods
           "bezier!" :methods}
 "BitmapFont" {"bitmap-font" :constructors}
 "BitmapFontLoader" {"loader :bitmap-font" :methods
                     "loader! :bitmap-font" :methods}
 "BlendingAttribute" {"attribute :blending" :constructors
                      "attribute-type :blending" :static-fields
                      "attribute! :blending" :static-methods}
 "Body" {"create-body!" :methods
         "body!" :methods}
 "BodyDef" {"body-def" :fields}
 "Bresenham2" {"bresenham-2" :methods
               "bresenham-2!" :methods}
 "BSpline" {"b-spline" :methods
            "b-spline!" :methods}
 "Button.ButtonStyle" {"style :button" :constructors}
 "CatmullRomSpline" {"catmull-rom-spline" :methods
                     "catmull-rom-spline!" :methods}
 "Circle" {"circle" :methods
           "circle!" :methods}
 "Color" {"color" :static-fields}
 "ColorAttribute" {"attribute :color" :constructors
                   "attribute-type :color" :static-fields
                   "attribute! :color" :static-methods}
 "Contact" {"contact!" :methods}
 "ConvexHull" {"convex-hull" :methods
               "convex-hull!" :methods}
 "ChainShape" {"chain-shape" :methods
               "chain-shape!" :methods}
 "CheckBox" {"check-box" :methods
             "check-box!" :methods}
 "CheckBox.CheckBoxStyle" {"style :check-box" :constructors}
 "CircleShape" {"circle-shape" :methods
                "circle-shape!" :methods}
 "CubemapAttribute" {"attribute :cubemap" :constructors
                     "attribute-type :cubemap" :static-fields
                     "attribute! :cubemap" :static-methods}
 "DelaunayTriangulator" {"delaunay-triangulator" :methods
                         "delaunay-triangulator!" :methods}
 "DepthTestAttribute" {"attribute :depth-test" :constructors
                       "attribute-type :depth-test" :static-fields
                       "attribute! :depth-test" :static-methods}
 "Dialog" {"dialog" :methods
           "dialog!" :methods}
 "DistanceJointDef" {"joint-def :distance" :fields}
 "EarClippingTriangulator" {"ear-clipping-triangulator" :methods
                            "ear-clipping-triangulator!" :methods}
 "EdgeShape" {"edge-shape" :methods
              "edge-shape!" :methods}
 "Ellipse" {"ellipse" :methods
            "ellipse!" :methods}
 "Environment" {"environment" :methods
                "environment!" :methods}
 "Files" {"files!" :methods}
 "Fixture" {"fixture!" :methods}
 "FixtureDef" {"fixture-def" :fields}
 "FloatAttribute" {"attribute :float" :constructors
                   "attribute-type :float" :static-fields
                   "attribute! :float" :static-methods}
 "FloatCounter" {"float-counter" :methods
                 "float-counter!" :methods}
 "FrictionJointDef" {"joint-def :friction" :fields}
 "Frustum" {"frustum" :methods
            "frustum!" :methods}
 "GearJointDef" {"joint-def :gear" :fields}
 "GeometryUtils" {"geometry!" :static-methods}
 "Graphics" {"graphics!" :methods}
 "GridPoint2" {"grid-point-2" :methods
               "grid-point-2!" :methods}
 "GridPoint3" {"grid-point-3" :methods
               "grid-point-3!" :methods}
 "GL20" {"gl!" :methods}
 "HexagonalTiledMapRenderer" {"hexagonal-tiled-map" :methods
                              "hexagonal-tiled-map!" :methods}
 "HorizontalGroup" {"horizontal" :methods
                    "horizontal!" :methods}
 "Image" {"image" :methods
          "image!" :methods}
 "ImageButton" {"image-button" :methods
                "image-button!" :methods}
 "ImageButton.ImageButtonStyle" {"style :image-button" :constructors}
 "ImageTextButton" {"image-text-button" :methods
                    "image-text-button!" :methods}
 "ImageTextButton.ImageTextButtonStyle" {"style :image-text-button" :constructors}
 "Input" {"input!" :methods}
 "Input.Keys" {"key-code" :static-fields
               "key-pressed?" :static-fields}
 "Input.Buttons" {"button-code" :static-fields
                  "button-pressed?" :static-fields}
 "Interpolation" {"interpolation" :static-classes}
 "Intersector" {"intersector!" :static-methods}
 "IntAttribute" {"attribute :int" :constructors
                 "attribute-type :int" :static-fields
                 "attribute! :int" :static-methods}
 "IsometricStaggeredTiledMapRenderer" {"isometric-staggered-tiled-map" :methods
                                       "isometric-staggered-tiled-map!" :methods}
 "IsometricTiledMapRenderer" {"isometric-tiled-map" :methods
                              "isometric-tiled-map!" :methods}
 "Joint" {"create-joint!" :methods
          "joint!" :methods}
 "Label" {"label" :methods
          "label!" :methods}
 "Material" {"material" :methods
             "material!" :methods}
 "MathUtils" {"math!" :static-methods}
 "Matrix3" {"matrix-3" :methods
            "matrix-3!" :methods}
 "Matrix4" {"matrix-4" :methods
            "matrix-4!" :methods}
 "ModelBatch" {"model-batch" :methods
               "model-batch!" :methods}
 "ModelBuilder" {"model-builder" :methods
                 "model-builder!" :methods}
 "ModelInstance" {"model" :methods
                  "model!" :methods}
 "ModelLoader" {"loader :model" :methods
                "loader! :model" :methods}
 "MouseJointDef" {"joint-def :mouse" :fields}
 "MusicLoader" {"loader :music" :methods
                "loader! :music" :methods}
 "Net" {"net!" :methods}
 "NinePatch" {"nine-patch" :methods
              "nine-patch!" :methods}
 "NinePatchDrawable" {"drawable :nine-patch" :constructors}
 "OrthogonalTiledMapRenderer" {"orthogonal-tiled-map" :methods
                               "orthogonal-tiled-map!" :methods}
 "OrthographicCamera" {"orthographic" :methods
                       "orthographic!" :methods}
 "ParticleEffect" {"particle-effect" :methods
                   "particle-effect!" :methods}
 "PerspectiveCamera" {"perspective" :methods
                      "perspective!" :methods}
 "Pixmap" {"pixmap" :constructors
           "pixmap!" :methods}
 "PixmapLoader" {"loader :pixmap" :methods
                 "loader! :pixmap" :methods}
 "Plane" {"plane" :methods
          "plane!" :methods}
 "Plane.PlaneSide" {"plane-side" :static-fields}
 "Polygon" {"polygon" :methods
            "polygon!" :methods}
 "PolygonShape" {"polygon-shape" :methods
                 "polygon-shape!" :methods}
 "Polyline" {"polyline" :methods
             "polyline!" :methods}
 "PrismaticJointDef" {"joint-def :prismatic" :fields}
 "ProgressBar.ProgressBarStyle" {"style :progress-bar" :constructors}
 "PulleyJointDef" {"joint-def :pulley" :fields}
 "Quaternion" {"quaternion" :methods
               "quaternion!" :methods}
 "Rectangle" {"rectangle" :methods
              "rectangle!" :methods}
 "RevoluteJointDef" {"joint-def :revolute" :fields}
 "RopeJointDef" {"joint-def :rope" :fields}
 "Scaling" {"scaling" :static-fields}
 "ScrollPane" {"scroll-pane" :methods
               "scroll-pane!" :methods}
 "ScrollPane.ScrollPaneStyle" {"style :scroll-pane" :constructors}
 "SelectBox" {"select-box" :methods
              "select-box!" :methods}
 "SelectBox.SelectBoxStyle" {"style :select-box" :constructors}
 "ShapeRenderer" {"shape" :methods
                  "shape!" :methods}
 "Skin" {"skin" :methods
         "skin!" :methods}
 "SkinLoader" {"loader :skin" :methods
               "loader! :skin" :methods}
 "Slider" {"slider" :methods
           "slider!" :methods}
 "Sound" {"sound" :methods
          "sound!" :methods}
 "SoundLoader" {"loader :sound" :methods
                "loader! :sound" :methods}
 "SplitPane.SplitPaneStyle" {"style :split-pane" :constructors}
 "SpriteDrawable" {"drawable :sprite" :constructors}
 "Stack" {"stack" :methods
          "stack!" :methods}
 "Stage" {"stage" :methods
          "stage!" :methods}
 "Table" {"table" :methods
          "table!" :methods}
 "TextureAtlas" {"texture-atlas" :methods
                 "texture-atlas!" :methods}
 "TextureAttribute" {"attribute :texture" :constructors
                     "attribute-type :texture" :static-fields
                     "attribute! :texture" :static-methods}
 "TextButton" {"text-button" :methods
               "text-button!" :methods}
 "TextButton.TextButtonStyle" {"style :text-button" :constructors}
 "TextField" {"text-field" :methods
              "text-field!" :methods}
 "TextField.TextFieldStyle" {"style :text-field" :constructors}
 "TextureLoader" {"loader :texture" :methods
                  "loader! :texture" :methods}
 "TextureRegion" {"texture" :methods
                  "texture!" :methods}
 "TextureRegionDrawable" {"drawable :texture-region" :constructors}
 "Tree" {"tree" :methods
         "tree!" :methods}
 "TmxMapLoader" {"loader :tmx-map" :methods
                 "loader! :tmx-map" :methods}
 "Touchpad.TouchpadStyle" {"style :touchpad" :constructors}
 "TiledMap" {"tiled-map" :methods
             "tiled-map!" :methods}
 "TiledMapTileLayer" {"tiled-map-layer" :methods
                      "tiled-map-layer!" :methods}
 "TiledMapTileLayer.Cell" {"tiled-map-cell" :methods
                           "tiled-map-cell!" :methods}
 "Tree.TreeStyle" {"style :tree" :constructors}
 "Vector2" {"vector-2" :methods
            "vector-2!" :methods}
 "Vector3" {"vector-3" :methods
            "vector-3!" :methods}
 "VertexAttributes.Usage" {"usage" :static-fields}
 "VerticalGroup" {"vertical" :methods
                  "vertical!" :methods}
 "WeldJointDef" {"joint-def :weld" :fields}
 "WheelJointDef" {"joint-def :wheel" :fields}
 "Window" {"window" :methods
           "window!" :methods}
 "Window.WindowStyle" {"style :window" :constructors}
 "WindowedMean" {"windowed-mean" :methods
                 "windowed-mean!" :methods}
 "World" {"box-2d" :methods
          "box-2d!" :methods}}
